services:
  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "123"
      POSTGRES_DB: "trainingTaskDB"
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./database/data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "database"

  config-server:
    image: config-server:latest
    build:
      context: ./config-server
      dockerfile: Dockerfile
    networks:
      backend:
        aliases:
          - "config-server"
    ports:
      - "8888:8888"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://config-server:8888/eureka-server/default || exit 1"]
      interval: 2s
      timeout: 2s
      retries: 10
      start_period: 1s
    restart: unless-stopped

  eureka-server:
    image: eureka-server:latest
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    networks:
      backend:
        aliases:
          - "eureka-server"
    ports:
      - "8761:8761"
    depends_on:
      config-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://eureka-server:8761/ || exit 1"]
      interval: 2s
      timeout: 2s
      retries: 10
      start_period: 1s
    restart: unless-stopped

  user-services:
    image: user-services:latest
    build:
      context: ./user-services
      dockerfile: Dockerfile
    networks:
      backend:
        aliases:
          - "user-services"
    ports:
      - "8081:8081"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy

  company-services:
    image: company-services:latest
    build:
      context: ./company-services
      dockerfile: Dockerfile
    networks:
      backend:
        aliases:
          - "company-services"
    ports:
      - "8082:8082"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy

  gateway-service:
    image: gateway-service:latest
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    networks:
      backend:
        aliases:
          - "gateway-service"
    ports:
      - "8085:8085"
    depends_on:
      - user-services
      - company-services

networks:
  backend:
    driver: bridge
